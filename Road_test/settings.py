"""
Django settings for Road_test project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f3@d@p+8z_yjrxr%#hsi6u6#5lcw(&cznu^ak%bz2m1w3w5b(y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "whitenoise.runserver_nostatic",

    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'modeltranslation',
    "corsheaders",
    'drf_yasg',

    'user',
    'test_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.locale.LocaleMiddleware',  # 🌍 Tilni aniqlash uchun qo‘shish kerak
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'Road_test.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Road_test.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'road_test',  # PostgreSQL bazasi nomi
        'USER': 'user_road_test',  # PostgreSQL foydalanuvchisi
        'PASSWORD': 'password_road_test',  # PostgreSQL paroli
        'HOST': 'road_test_db',  # Docker Compose'dagi service nomi
        'PORT': '5432',  # PostgreSQL porti (Docker ichida standart)
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Standart tilni o‘zbek tiliga o‘zgartirish
LANGUAGE_CODE = 'uz'

# Vaqt zonani Toshkent (O‘zbekiston) ga moslashtirish
TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True
USE_L10N = True
USE_TZ = True

LANGUAGES = (
    ('uz', 'Uzbek'),
    ('ru', 'Russian'),
    ('en', 'English'),
)

MODELTRANSLATION_DEFAULT_LANGUAGE = 'uz'  # Standart til

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Static fayllarni saqlash joyi

# MEDIA FILES SETTINGS
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "mediafiles")  # Media fayllarni saqlash joyi

# STATICFILES_DIRS => Agar `static` papkangiz loyihangiz ichida bo‘lsa, uni qo‘shing:
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Static fayllarni siqib xizmat qilish
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'user.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # JWT Authentication
    ),
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=24),  # Access token muddati
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),  # Refresh token muddati
    "BLACKLIST_AFTER_ROTATION": True,  # Refresh token bir marta ishlatilganda eski tokenni bekor qiladi
    "ROTATE_REFRESH_TOKENS": True,
}

# 🔹 CORS - Barcha domenlarga ruxsat berish (FAQAT TEST UCHUN!)
CORS_ALLOW_ALL_ORIGINS = True  # Production uchun FALSE qilish tavsiya etiladi!

# 🔹 CORS - Faqat ma'lum domenlarga ruxsat berish
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
#     "https://yourfrontend.com",
# ]

# 🔹 CSRF - Barcha API so‘rovlaridan CSRF tekshiruvini o‘chirish
# CSRF_TRUSTED_ORIGINS = ["http://localhost:8001", "https://yourfrontend.com"]
# CSRF_COOKIE_SECURE = False  # Agar HTTPS ishlatilsa, True qiling
